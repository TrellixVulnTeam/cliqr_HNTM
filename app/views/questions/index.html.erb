<script src="https://code.highcharts.com/highcharts.js" type="text/javascript"></script>
<script>
  $('#upvote').click(function(){
  	console.log("upvote clicked")
  });

  $('#downvote').click(function(){
  	console.log("downvote clicked")
  });

  var classSize = 20; // hard-coded for now
  var ticks;
  var categories = <%= @categories %>;
  var data = <%= @data %>;
  var yCategories = [];


  // Create custom y-axis labels
  for (i = 1; i < 101; i++) {
    if (i === 1) {
      yCategories[i] = "?"
    } else if (i == 100) {
      yCategories[i] = "???"
    } else {
      yCategories[i] = ""
    }
  }

  // Make y-axis a percentage; cap clueless level at 100
  for (var point in data) {
    data[point] = (data[point] / classSize) * 100;
    if (data[point] > 100) {
      data[point] = 100
    }
  }
  
  if (data.length <= 60) {
    ticks = 5
  } else if (data.length > 60 && data.length <= 120) {
    ticks = 15
  } else {
    ticks = 30
  }

  $(function () {
    $('#container-x').highcharts({
        chart: {
            type: "spline",
            backgroundColor: "#ffffff"
        },
        credits: {
        	enabled: false
        },
        legend: {
        	enabled: false
        },
        plotOptions: {
            series: {
                marker: {
                    enabled: false
                },    
            	color: '#0071ca'
            },
        },
        title: {
            text: null,
            x: -20 //center
        },
        xAxis: {
            categories: categories.map(function(x) {return x + ":00"}),
            lineWidth: 0,
            tickLength: 0,
            tickInterval: ticks
        },
        yAxis: {
          categories: yCategories,
          min: 0,
          max: 100,
        	floor: 0,
            plotLines: [{
                value: 0,
                width: 0,
                color: '#0071ca'
            }],
            gridLineWidth: 0,
            title: {
            	text: null
            },
            // minPadding: null
        },
        // legend: {
        //     layout: 'vertical',
        //     align: 'right',
        //     verticalAlign: 'middle',
        //     borderWidth: 0
        // },
        series: [{
            // A little hack to make the line look nicer when y == 0
            data: data,//.map(function(x) {if (x == 0) { return x + .2} else { return x } }),
            name: "Clueless Level"
        }]
    });
});

</script>
<h1 id="title">Cluelesses</h1>

<div id="container-x" style="min-width: 310px; height: 500px; margin: 0 5%"> <%= @data %></div>

<h2 id="newQlink">
	<%= link_to "Add new Question", new_question_path %>
</h2><br>
<h5 id="explain">Teacher Vetted Questions And Answers Will Be Highlighted In Green</h5>&nbsp;
<% @questions.each do |question| %>
	
	<div class="quest">
	  <div class="span1">
	  	<%= form_for @vote, {url: question_votes_path(question) } do |f| %>
    		<%= f.hidden_field :vote_type, value: 'upvote' %>
    		<%= f.hidden_field :content_id, value: question.id %>
    		<%= f.hidden_field :content_type, value: 'question' %>
	    <button type="submit" id="upvote" class="btn btn-sm btn-success btn-upvote">
	      <span class="glyphicon glyphicon-arrow-up"></span>&nbsp;
	    </button><br>
    	<% end %>
	    <span class="count question-<%= question.id%>-score"><%= question.upvote - question.downvote %></span><br>
	    <%= form_for @vote, {url: question_votes_path(question) } do |f| %>
    		<%= f.hidden_field :vote_type, value: 'downvote' %>
    		<%= f.hidden_field :content_id, value: question.id %>
    		<%= f.hidden_field :content_type, value: 'question' %>
	    <button type="submit" id="downvote" class="btn btn-sm btn-danger btn-downvote">
	      <span class="glyphicon glyphicon-arrow-down"></span>&nbsp;
	    </button>
    	<% end %>
	  </div>
	  <div class="span8 question">
	    <pre style='<%= question.vetted ? "background-color:#bfd9ba;" : "background-color:#F0F0F0" %>' ><%= link_to question.text, question_path(question) %></pre>
	    <%= form_for question, {url: question_vet_path(question)} {|f| f.submit 'Vet Question', class: "btn btn-success btn-xs vet-button" } if current_user.presenter == true %>
	  </div>
	</div>

	<% @answers.where(question_id:question.id).order('upvote - downvote DESC').each do |answer| %>

		<div class="ans">
		  <div class="span1">
		  	<%= form_for @vote, {url: answer_votes_path(answer) } do |f| %>
      			<%= f.hidden_field :vote_type, value: 'upvote' %>
      			<%= f.hidden_field :content_id, value: answer.id %>
    			<%= f.hidden_field :content_type, value: 'answer' %>
		    <button type="submit" id="upvote" class="btn btn-sm btn-success btn-upvote">
		      <span class="glyphicon glyphicon-arrow-up"></span>&nbsp;
		    </button><br>
		    <% end %>
		    <span class="count answer-<%= answer.id%>-score"><%= answer.upvote - answer.downvote %></span><br>
		    <%= form_for @vote, {url: answer_votes_path(answer) } do |f| %>
      			<%= f.hidden_field :vote_type, value: 'downvote' %>
      			<%= f.hidden_field :content_id, value: answer.id %>
    			<%= f.hidden_field :content_type, value: 'answer' %>
		    <button type="submit" id="downvote" class="btn btn-sm btn-danger btn-downvote">
		      <span class="glyphicon glyphicon-arrow-down"></span>&nbsp;
		    </button>
		    <% end %>
		  </div>
		  <div class="span6 answer">        
		    <pre style='<%= answer.vetted ? "background-color:#bfd9ba;" : "background-color:#F0F0F0;" %>' ><%= answer.text %></pre>
		    <%= form_for answer, {url: answer_vet_path(answer)} {|f| f.submit 'Vet Answer', class: "btn btn-success btn-xs vet-button"  } if current_user.presenter == true %>
		  </div>
		</div>

	<% end %>
	

<% end %>

<style>
.vet-button {
	float: right;
}

</style>

<script>
  $('#upvote').click(function(){
  	console.log("upvote clicked")
  });

  $('#downvote').click(function(){
  	console.log("downvote clicked")
  });

$("form.new_vote").submit(function(e){
	e.preventDefault();

	var contentType = $(this).children('#vote_content_type').val()
	var contentId = $(this).children("#vote_content_id").val()
	var score = parseInt($('.' + contentType + '-' + contentId + '-score').text())
	var voteType = $(this).children('#vote_vote_type').val()

	var data = {
  			utf8: "\u2713",
			authenticity_token: $('input[name=authenticity_token]').val(),
			vote: {vote_type: voteType}
	}

	data[contentType + '_id'] = contentId
	
	$.ajax({
  		type: "POST",
  		url: "/" + contentType + "s/" + contentId + "/votes",
  		data: data
	}).success(function(){
		voteType === 'upvote' ? score++ : score--
		$("." + contentType + "-" + contentId + '-score').text(score)
	})

});

</script>
